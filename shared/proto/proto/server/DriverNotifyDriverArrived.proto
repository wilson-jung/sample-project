syntax = "proto3";

import "ride.proto";
import "wrappers.proto";

package taxi.server;

option java_multiple_files = true;
option java_package = "kr.co.vcnc.gryphon.protocol.server";
option java_outer_classname = "DriverNotifyDriverArrivedProto";

// 설명:
// 드라이버가 출발지에 도착했을때 드라이버앱에서 호출한다.
// 만약 이미 Ride가 ARRIVED 상태라면 그냥 성공한 것처럼 처리된다. (멱등성 원칙)
//
// 에러코드:
// BAD_REQUEST: 요청의 RideId에 해당하는 라이드가 존재하지 않을때
// BAD_REQUEST: 드라이버에게 할당된 Ride가 아닐때
// BAD_REQUEST: ACCEPTED 상태가 아닐때
// CONFIRM_REQUIRED: 출발지 입구점 안내이고 confirmed가 false일 때
// CONFIRM_REQUIRED: 현재 위치와 라이드 출발지 사이의 거리가 멀고 confirmed가 false일 때
// IMPORTANT_CONFIRM_REQUIRED: 현재 위치와 라이드 출발지 사이의 거리가 멀고 해당 라이드가 바로대리이고 confirmed가 false일 때

message DriverNotifyDriverArrivedParams {
    string rideId = 1;

    // 현재 위치와 라이드 출발지 사이의 거리가 멀거나 출발지 입구점 안내일 때 출발지 도착 알림을 보낼지 여부
    // 먼저 false로 해서 요청해본 후, CONFIRM_REQUIRED 에러 발생시 유저에게 확인을 받고 true로 올린다.
    // 하위 호환을 위해 null이면 true와 같다.
    BoolValue confirmed = 2;
}

message DriverNotifyDriverArrivedResult {
    RideDTO ride = 1;

    // 첫 탑승 이벤트를 위해 사용. 값이 null이 아니고 true인 경우에만 첫 탐승 웰컴 키트 알럿을 띄우면 된다.
    // 나중에 첫탑승 이벤트가 종료되면 없어질 수 있는 필드이므로 BoolValue로 내려준다.
    BoolValue isUserFirstRide = 2;

    message Notice {
        string imageUrl = 1;
        string title = 2;
        string body = 3;
    }

    // 드라이버에게 공지할 정보들
    Notice notice = 3;
}
